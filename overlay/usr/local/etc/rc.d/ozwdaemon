#!/bin/sh
#
# PROVIDE: ozwdaemon
# REQUIRE: DAEMON
# KEYWORD: shutdown
#
# ozwdaemon_enable: Set to YES to enable the ozwdaemon service.
#     Default: NO
#
# ozwdaemon_user: The user account used to run the ozwdaemon daemon.
#     This is optional, however do not specifically set this to an
#     empty string as this will cause the daemon to run as root.
#     Default: root
#
# ozwdaemon_group: The group account used to run the ozwdaemon daemon.
#     This is optional, however do not specifically set this to an
#     empty string as this will cause the daemon to run with group wheel.
#     Default: wheel
#
# ozwdaemon_profile: Path to a file containing ozwdaemon enviroment variables.
#     Any variables set using ozw_profile will override `ozw_variable` values set
#     in this rc service script or using `sysrc ozw_variable=value`.
#     Default:  "/root/.ozw_profile"
#     Change:   `sysrc ozw_profile=/root/config/ozw_profile`
#     UnChange: `sysrc -x ozw_profile`
#
# ozw_config_dir: Directory containing the OZW Config Files.
#     Default:  "/usr/local/etc/openzwave"
#     Change:   `sysrc ozw_config_dir=/root/config`
#     UnChange: `sysrc -x ozw_config_dir`
#
# ozw_user_dir: Directory for the OZW User Files.
#     Default:  "/root"
#     Change:   `sysrc ozw_user_dir=/root/config`
#     UnChange: `sysrc -x ozw_user_dir`
#
# ozw_usb_path: Path to the Z-Wave USB Stick or Serial Device.
#     Default:  "/dev/cuaU0"
#     Change:   `sysrc ozw_usb_path=/dev/ttyACM0`
#     UnChange: `srsrc -x ozw_usb_path`
#
# ozw_instance: OpenZWave Instance Number. If you want to run more than one
#     Z-Wave Network with multiple ozwdaemons, set this to a number greater than 1.
#     Default:  1
#     Change:   `sysrc ozw_instance=2`
#     UnChange: `sysrc -x ozw_instance`
#
# ozw_mqtt_port: MQTT Server Port.
#     Default:  1883
#     Change:   `sysrc ozw_mqtt_port=1984`
#     UnChange: `sysrc -x ozw_mqtt_port`
#
# ozw_mqtt_server: MQTT Server Hostname/IP Address.
#     Default:  localhost
#     Change:   `sysrc ozw_mqtt_server=192.168.10.100`
#     UnChange: `sysrc -x ozw_mqtt_server`
#
# ozw_mqtt_tls: Connect with TLS encryption to your MQTT Broker.
#     Default:  false
#     Change:   `sysrc ozw_mqtt_tls=true`
#     UnChange: `sysrc -x ozw_mqtt_tls`
#
# ozw_stop_on_failure: Stop service if ozwdaemon detects a failure.
#     Default:  true
#     Change:   `sysrc ozw_stop_on_failure=false`
#     UnChange: `sysrc -x ozw_stop_on_failure`

# -------------------------------------------------------
# Copy this file to '/usr/local/etc/rc.d/ozwdaemon' 
# `chmod +x /usr/local/etc/rc.d/ozwdaemon`
# `sysrc -f /etc/rc.conf ozwdaemon_enable=yes`
# `service ozwdaemon start`
# -------------------------------------------------------

. /etc/rc.subr
name=ozwdaemon
rcvar=${name}_enable

pidfile_child="/var/run/${name}.pid"
pidfile="/var/run/${name}_daemon.pid"
logfile="/var/log/${name}_daemon.log"

: ${ozwdaemon_enable:="NO"}
: ${ozwdaemon_user:="root"}
: ${ozwdaemon_group:="wheel"}
: ${ozwdaemon_profile:="/root/.ozw_profile"}
: ${ozw_config_dir:="/usr/local/etc/openzwave"}
: ${ozw_user_dir:="/root"}
: ${ozw_usb_path:="/dev/cuaU0"}
: ${ozw_instance:="1"}
: ${ozw_mqtt_port:="1883"}
: ${ozw_mqtt_server:="localhost"}
: ${ozw_mqtt_tls:=false}
: ${ozw_stop_on_failure:=true}

command="/usr/sbin/daemon"
extra_commands="logs restart"

logs_cmd=${name}_logs
ozwdaemon_logs() {
  tail -F "${logfile}"
}

restart_cmd="${name}_restart"
ozwdaemon_restart() {
  run_rc_command stop  #>/dev/null 2>&1
  sleep 2
  run_rc_command start #>/dev/null 2>&1
}

start_precmd=${name}_precmd
ozwdaemon_precmd() {
  
  if [ -f "${ozwdaemon_profile}" ]; then
    echo "Loading enviroment variables from ${ozwdaemon_profile}"
    . "${ozwdaemon_profile}"
  fi
 
  if [ ! -c ${USB_PATH:=$ozw_usb_path} ]; then
    echo "USB Path ${USB_PATH} does not exist or is not a Character Device"
    exit 128
  fi
  
  OZW_ARGS=""
  OZW_ARGS=" --serial-port ${USB_PATH} \
    --config-dir ${OZW_CONFIG_DIR:=$ozw_config_dir} \
    --user-dir ${OZW_USER_DIR:=$ozw_user_dir} \
    --mqtt-instance ${OZW_INSTANCE:=$ozw_instance} \
    --mqtt-port ${MQTT_PORT:=$ozw_mqtt_port} \
    --mqtt-server ${MQTT_SERVER:=$ozw_mqtt_server}"

  if [ ! -z "${MQTT_USERNAME:=$ozw_mqtt_user}" ]; then
    OZW_ARGS="${OZW_ARGS} --mqtt-username ${MQTT_USERNAME}"
  fi
  
  if [ "${MQTT_TLS:=$ozw_mqtt_tls}" == true ]; then
    OZW_ARGS="${OZW_ARGS} --mqtt-tls"
  elif [ "${MQTT_TLS}" != false ]; then
    echo "Invalid value for MQTT_TLS: \"${MQTT_TLS}\", expected true or false."
    exit 1
  fi
  
  if [ "${STOP_ON_FAILURE:=$ozw_stop_on_failure}" == true ]; then
    OZW_ARGS="${OZW_ARGS} --stop-on-failure"
  elif [ "${STOP_ON_FAILURE}" != false ]; then
    echo "Invalid value for STOP_ON_FAILURE: \"${STOP_ON_FAILURE}\", expected true or false."
    exit 1
  fi
  
  install -g ${ozwdaemon_group} -m 644 -o ${ozwdaemon_user} -- /dev/null "${logfile}"
  install -g ${ozwdaemon_group} -m 644 -o ${ozwdaemon_user} -- /dev/null "${pidfile}"
  install -g ${ozwdaemon_group} -m 644 -o ${ozwdaemon_user} -- /dev/null "${pidfile_child}"
  
  rc_flags="-f -o ${logfile} -P ${pidfile} -p ${pidfile_child} /usr/local/bin/ozwdaemon ${OZW_ARGS}" ${rc_flags}

}

start_postcmd=${name}_poststart
ozwdaemon_poststart() {
  sleep 1
  run_rc_command status
}

stop_postcmd=${name}_poststop
ozwdaemon_poststop() {
  rm -f -- "${pidfile}"
  rm -f -- "${pidfile_child}"
}

load_rc_config ${name}
run_rc_command "$1"
